//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------
using System.Text.Json;
using System.Collections.ObjectModel;
using System.CodeDom.Compiler;
using System.Text.Json.Serialization;
#nullable enable

#pragma warning disable 108 // Disable "CS0108 '{derivedDto}.ToJson()' hides inherited member '{dtoBase}.ToJson()'. Use the new keyword if hiding was intended."
#pragma warning disable 114 // Disable "CS0114 '{derivedDto}.RaisePropertyChanged(String)' hides inherited member 'dtoBase.RaisePropertyChanged(String)'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword."
#pragma warning disable 472 // Disable "CS0472 The result of the expression is always 'false' since a value of type 'Int32' is never equal to 'null' of type 'Int32?'
#pragma warning disable 1573 // Disable "CS1573 Parameter '...' has no matching param tag in the XML comment for ...
#pragma warning disable 1591 // Disable "CS1591 Missing XML comment for publicly visible type or member ..."
#pragma warning disable 8073 // Disable "CS8073 The result of the expression is always 'false' since a value of type 'T' is never equal to 'null' of type 'T?'"
#pragma warning disable 3016 // Disable "CS3016 Arrays as attribute arguments is not CLS-compliant"
#pragma warning disable 8603 // Disable "CS8603 Possible null reference return"

namespace fields.Entities.HttpServices.CVPartnerService.CvHttpClient {

  [GeneratedCode("NSwag", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
  public partial interface IClient {
    /// <summary>
    /// GET users
    /// </summary>
    /// <returns>OK</returns>
    /// <exception cref="ApiException">A server side error occurred.</exception>
    Task<SwaggerResponse<ICollection<Anonymous>>> UsersAsync();

    /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
    /// <summary>
    /// GET users
    /// </summary>
    /// <returns>OK</returns>
    /// <exception cref="ApiException">A server side error occurred.</exception>
    Task<SwaggerResponse<ICollection<Anonymous>>> UsersAsync(CancellationToken cancellationToken);

    /// <summary>
    /// GET {id_1}
    /// </summary>
    /// <returns>OK</returns>
    /// <exception cref="ApiException">A server side error occurred.</exception>
    Task<SwaggerResponse<Response>> CvsAsync(object id_0, object id_1);

    /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
    /// <summary>
    /// GET {id_1}
    /// </summary>
    /// <returns>OK</returns>
    /// <exception cref="ApiException">A server side error occurred.</exception>
    Task<SwaggerResponse<Response>> CvsAsync(object id_0, object id_1, CancellationToken cancellationToken);

  }

  [GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
  public partial class Company_subdomains : Collection<string> {

    public string ToJson() {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Serialize(this, options);

    }
    public static Company_subdomains FromJson(string data) {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Deserialize<Company_subdomains>(data, options);

    }

  }

  [GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
  public partial class Company_group_ids : Collection<object> {

    public string ToJson() {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Serialize(this, options);

    }
    public static Company_group_ids FromJson(string data) {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Deserialize<Company_group_ids>(data, options);

    }

  }

  [GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
  public partial class Roles : Collection<object> {

    public string ToJson() {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Serialize(this, options);

    }
    public static Roles FromJson(string data) {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Deserialize<Roles>(data, options);

    }

  }

  [GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
  public partial class Role_allowed_office_ids : Collection<object> {

    public string ToJson() {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Serialize(this, options);

    }
    public static Role_allowed_office_ids FromJson(string data) {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Deserialize<Role_allowed_office_ids>(data, options);

    }

  }

  [GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
  public partial class Role_allowed_tag_ids : Collection<object> {

    public string ToJson() {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Serialize(this, options);

    }
    public static Role_allowed_tag_ids FromJson(string data) {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Deserialize<Role_allowed_tag_ids>(data, options);

    }

  }

  [GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
  public partial class Language_codes : Collection<string> {

    public string ToJson() {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Serialize(this, options);

    }
    public static Language_codes FromJson(string data) {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Deserialize<Language_codes>(data, options);

    }

  }

  [GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
  public partial class Masterdata_languages : Collection<string> {

    public string ToJson() {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Serialize(this, options);

    }
    public static Masterdata_languages FromJson(string data) {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Deserialize<Masterdata_languages>(data, options);

    }

  }

  [GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
  public partial class Selected_office_ids : Collection<object> {

    public string ToJson() {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Serialize(this, options);

    }
    public static Selected_office_ids FromJson(string data) {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Deserialize<Selected_office_ids>(data, options);

    }

  }

  [GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
  public partial class Selected_tag_ids : Collection<object> {

    public string ToJson() {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Serialize(this, options);

    }
    public static Selected_tag_ids FromJson(string data) {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Deserialize<Selected_tag_ids>(data, options);

    }

  }

  [GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
  public partial class Image {

    [JsonPropertyName("url")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? Url { get; set; } = default!;
    // Ignore so we can check delta between various versions of a cv since CV partner includes a changing token to AWS. The other properties are just another version of URL property.
    [JsonPropertyName("thumb")]

    [JsonIgnore]
    public Thumb? Thumb { get; set; } = default!;

    [JsonPropertyName("fit_thumb")]

    [JsonIgnore]
    public Fit_thumb? Fit_thumb { get; set; } = default!;

    [JsonPropertyName("large")]

    [JsonIgnore]
    public Large? Large { get; set; } = default!;

    [JsonPropertyName("small_thumb")]

    [JsonIgnore]
    public Small_thumb? Small_thumb { get; set; } = default!;

    private IDictionary<string, object>? _additionalProperties;

    [JsonExtensionData]
    public IDictionary<string, object> AdditionalProperties {
      get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
      set { _additionalProperties = value; }
    }

    public string ToJson() {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Serialize(this, options);

    }
    public static Image FromJson(string data) {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Deserialize<Image>(data, options);

    }

  }

  [GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
  public partial class Thumb {

    [JsonPropertyName("url")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? Url { get; set; } = default!;

    private IDictionary<string, object>? _additionalProperties;

    [JsonExtensionData]
    public IDictionary<string, object> AdditionalProperties {
      get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
      set { _additionalProperties = value; }
    }

    public string ToJson() {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Serialize(this, options);

    }
    public static Thumb FromJson(string data) {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Deserialize<Thumb>(data, options);

    }

  }

  [GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
  public partial class Fit_thumb {

    [JsonPropertyName("url")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? Url { get; set; } = default!;

    private IDictionary<string, object>? _additionalProperties;

    [JsonExtensionData]
    public IDictionary<string, object> AdditionalProperties {
      get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
      set { _additionalProperties = value; }
    }

    public string ToJson() {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Serialize(this, options);

    }
    public static Fit_thumb FromJson(string data) {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Deserialize<Fit_thumb>(data, options);

    }

  }

  [GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
  public partial class Large {

    [JsonPropertyName("url")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? Url { get; set; } = default!;

    private IDictionary<string, object>? _additionalProperties;

    [JsonExtensionData]
    public IDictionary<string, object> AdditionalProperties {
      get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
      set { _additionalProperties = value; }
    }

    public string ToJson() {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Serialize(this, options);

    }
    public static Large FromJson(string data) {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Deserialize<Large>(data, options);

    }

  }

  [GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
  public partial class Small_thumb {

    [JsonPropertyName("url")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? Url { get; set; } = default!;

    private IDictionary<string, object>? _additionalProperties;

    [JsonExtensionData]
    public IDictionary<string, object> AdditionalProperties {
      get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
      set { _additionalProperties = value; }
    }

    public string ToJson() {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Serialize(this, options);

    }
    public static Small_thumb FromJson(string data) {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Deserialize<Small_thumb>(data, options);

    }

  }

  [GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
  public partial class Custom_tag_ids : Collection<string> {

    public string ToJson() {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Serialize(this, options);

    }
    public static Custom_tag_ids FromJson(string data) {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Deserialize<Custom_tag_ids>(data, options);

    }

  }

  [GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
  public partial class Name_multilang {

    private IDictionary<string, object>? _additionalProperties;

    [JsonExtensionData]
    public IDictionary<string, object> AdditionalProperties {
      get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
      set { _additionalProperties = value; }
    }

    public string ToJson() {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Serialize(this, options);

    }
    public static Name_multilang FromJson(string data) {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Deserialize<Name_multilang>(data, options);

    }

  }

  [GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
  public partial class Nationality {

    private IDictionary<string, object>? _additionalProperties;

    [JsonExtensionData]
    public IDictionary<string, object> AdditionalProperties {
      get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
      set { _additionalProperties = value; }
    }

    public string ToJson() {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Serialize(this, options);

    }
    public static Nationality FromJson(string data) {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Deserialize<Nationality>(data, options);

    }

  }

  [GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
  public partial class Place_of_residence {

    private IDictionary<string, object>? _additionalProperties;

    [JsonExtensionData]
    public IDictionary<string, object> AdditionalProperties {
      get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
      set { _additionalProperties = value; }
    }

    public string ToJson() {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Serialize(this, options);

    }
    public static Place_of_residence FromJson(string data) {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Deserialize<Place_of_residence>(data, options);

    }

  }

  [GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
  public partial class Technologies : Collection<Anonymous2> {

    public string ToJson() {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Serialize(this, options);

    }
    public static Technologies FromJson(string data) {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Deserialize<Technologies>(data, options);

    }

  }

  [GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
  public partial class Title {

    private IDictionary<string, object>? _additionalProperties;

    [JsonExtensionData]
    public IDictionary<string, object> AdditionalProperties {
      get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
      set { _additionalProperties = value; }
    }

    public string ToJson() {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Serialize(this, options);

    }
    public static Title FromJson(string data) {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Deserialize<Title>(data, options);

    }

  }

  [GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
  public partial class Custom_tags : Collection<Anonymous3> {

    public string ToJson() {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Serialize(this, options);

    }
    public static Custom_tags FromJson(string data) {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Deserialize<Custom_tags>(data, options);

    }

  }

  [GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
  public partial class Project_experiences : Collection<object> {

    public string ToJson() {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Serialize(this, options);

    }
    public static Project_experiences FromJson(string data) {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Deserialize<Project_experiences>(data, options);

    }

  }

  [GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
  public partial class Certifications : Collection<object> {

    public string ToJson() {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Serialize(this, options);

    }
    public static Certifications FromJson(string data) {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Deserialize<Certifications>(data, options);

    }

  }

  [GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
  public partial class Courses : Collection<object> {

    public string ToJson() {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Serialize(this, options);

    }
    public static Courses FromJson(string data) {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Deserialize<Courses>(data, options);

    }

  }

  [GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
  public partial class Educations : Collection<object> {

    public string ToJson() {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Serialize(this, options);

    }
    public static Educations FromJson(string data) {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Deserialize<Educations>(data, options);

    }

  }

  [GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
  public partial class Cv_roles : Collection<object> {

    public string ToJson() {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Serialize(this, options);

    }
    public static Cv_roles FromJson(string data) {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Deserialize<Cv_roles>(data, options);

    }

  }

  [GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
  public partial class Highlighted_roles : Collection<object> {

    public string ToJson() {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Serialize(this, options);

    }
    public static Highlighted_roles FromJson(string data) {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Deserialize<Highlighted_roles>(data, options);

    }

  }

  [GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
  public partial class Category {

    private IDictionary<string, object>? _additionalProperties;

    [JsonExtensionData]
    public IDictionary<string, object> AdditionalProperties {
      get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
      set { _additionalProperties = value; }
    }

    public string ToJson() {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Serialize(this, options);

    }
    public static Category FromJson(string data) {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Deserialize<Category>(data, options);

    }

  }

  [GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
  public partial class Exclude_tags : Collection<object> {

    public string ToJson() {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Serialize(this, options);

    }
    public static Exclude_tags FromJson(string data) {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Deserialize<Exclude_tags>(data, options);

    }

  }

  [GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
  public partial class Values {

    [JsonPropertyName("no")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? No { get; set; } = default!;

    [JsonPropertyName("int")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? Int { get; set; } = default!;

    [JsonPropertyName("se")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? Se { get; set; } = default!;

    private IDictionary<string, object>? _additionalProperties;

    [JsonExtensionData]
    public IDictionary<string, object> AdditionalProperties {
      get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
      set { _additionalProperties = value; }
    }

    public string ToJson() {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Serialize(this, options);

    }
    public static Values FromJson(string data) {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Deserialize<Values>(data, options);

    }

  }

  [GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
  public partial class Category_ids : Collection<string> {

    public string ToJson() {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Serialize(this, options);

    }
    public static Category_ids FromJson(string data) {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Deserialize<Category_ids>(data, options);

    }

  }

  [GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
  public partial class Custom_tag_category {

    [JsonPropertyName("_id")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? _id { get; set; } = default!;

    [JsonPropertyName("id")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? Id { get; set; } = default!;

    [JsonPropertyName("values")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public Values2? Values { get; set; } = default!;

    [JsonPropertyName("external_unique_id")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? External_unique_id { get; set; } = default!;

    [JsonPropertyName("can_be_used_for_cvs")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public bool? Can_be_used_for_cvs { get; set; } = default!;

    [JsonPropertyName("can_be_used_for_references")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public bool? Can_be_used_for_references { get; set; } = default!;

    [JsonPropertyName("can_be_used_for_customers")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public bool? Can_be_used_for_customers { get; set; } = default!;

    [JsonPropertyName("allow_filtering")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public bool? Allow_filtering { get; set; } = default!;

    private IDictionary<string, object>? _additionalProperties;

    [JsonExtensionData]
    public IDictionary<string, object> AdditionalProperties {
      get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
      set { _additionalProperties = value; }
    }

    public string ToJson() {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Serialize(this, options);

    }
    public static Custom_tag_category FromJson(string data) {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Deserialize<Custom_tag_category>(data, options);

    }

  }

  [GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
  public partial class Blogs : Collection<object> {

    public string ToJson() {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Serialize(this, options);

    }
    public static Blogs FromJson(string data) {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Deserialize<Blogs>(data, options);

    }

  }

  [GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
  public partial class Key_qualifications : Collection<Anonymous4> {

    public string ToJson() {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Serialize(this, options);

    }
    public static Key_qualifications FromJson(string data) {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Deserialize<Key_qualifications>(data, options);

    }

  }

  [GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
  public partial class Languages : Collection<Anonymous5> {

    public string ToJson() {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Serialize(this, options);

    }
    public static Languages FromJson(string data) {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Deserialize<Languages>(data, options);

    }

  }

  [GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
  public partial class Positions : Collection<Anonymous6> {

    public string ToJson() {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Serialize(this, options);

    }
    public static Positions FromJson(string data) {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Deserialize<Positions>(data, options);

    }

  }

  [GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
  public partial class Presentations : Collection<Anonymous7> {

    public string ToJson() {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Serialize(this, options);

    }
    public static Presentations FromJson(string data) {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Deserialize<Presentations>(data, options);

    }

  }

  [GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
  public partial class Recommendations : Collection<Anonymous8> {

    public string ToJson() {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Serialize(this, options);

    }
    public static Recommendations FromJson(string data) {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Deserialize<Recommendations>(data, options);

    }

  }

  [GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
  public partial class Work_experiences : Collection<Anonymous9> {

    public string ToJson() {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Serialize(this, options);

    }
    public static Work_experiences FromJson(string data) {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Deserialize<Work_experiences>(data, options);

    }

  }

  [GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
  public partial class Long_description {

    [JsonPropertyName("no")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? No { get; set; } = default!;

    [JsonPropertyName("int")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? Int { get; set; } = default!;

    private IDictionary<string, object>? _additionalProperties;

    [JsonExtensionData]
    public IDictionary<string, object> AdditionalProperties {
      get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
      set { _additionalProperties = value; }
    }

    public string ToJson() {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Serialize(this, options);

    }
    public static Long_description FromJson(string data) {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Deserialize<Long_description>(data, options);

    }

  }

  [GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
  public partial class Organiser {

    [JsonPropertyName("no")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? No { get; set; } = default!;

    [JsonPropertyName("int")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? Int { get; set; } = default!;

    private IDictionary<string, object>? _additionalProperties;

    [JsonExtensionData]
    public IDictionary<string, object> AdditionalProperties {
      get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
      set { _additionalProperties = value; }
    }

    public string ToJson() {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Serialize(this, options);

    }
    public static Organiser FromJson(string data) {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Deserialize<Organiser>(data, options);

    }

  }

  [GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
  public partial class Attachments : Collection<object> {

    public string ToJson() {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Serialize(this, options);

    }
    public static Attachments FromJson(string data) {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Deserialize<Attachments>(data, options);

    }

  }

  [GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
  public partial class Program {

    [JsonPropertyName("no")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? No { get; set; } = default!;

    [JsonPropertyName("int")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? Int { get; set; } = default!;

    private IDictionary<string, object>? _additionalProperties;

    [JsonExtensionData]
    public IDictionary<string, object> AdditionalProperties {
      get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
      set { _additionalProperties = value; }
    }

    public string ToJson() {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Serialize(this, options);

    }
    public static Program FromJson(string data) {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Deserialize<Program>(data, options);

    }

  }

  [GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
  public partial class Degree {

    [JsonPropertyName("no")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? No { get; set; } = default!;

    [JsonPropertyName("int")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? Int { get; set; } = default!;

    private IDictionary<string, object>? _additionalProperties;

    [JsonExtensionData]
    public IDictionary<string, object> AdditionalProperties {
      get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
      set { _additionalProperties = value; }
    }

    public string ToJson() {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Serialize(this, options);

    }
    public static Degree FromJson(string data) {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Deserialize<Degree>(data, options);

    }

  }

  [GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
  public partial class Description {

    [JsonPropertyName("no")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? No { get; set; } = default!;

    [JsonPropertyName("int")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? Int { get; set; } = default!;

    private IDictionary<string, object>? _additionalProperties;

    [JsonExtensionData]
    public IDictionary<string, object> AdditionalProperties {
      get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
      set { _additionalProperties = value; }
    }

    public string ToJson() {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Serialize(this, options);

    }
    public static Description FromJson(string data) {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Deserialize<Description>(data, options);

    }

  }

  [GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
  public partial class School {

    [JsonPropertyName("no")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? No { get; set; } = default!;

    [JsonPropertyName("int")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? Int { get; set; } = default!;

    private IDictionary<string, object>? _additionalProperties;

    [JsonExtensionData]
    public IDictionary<string, object> AdditionalProperties {
      get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
      set { _additionalProperties = value; }
    }

    public string ToJson() {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Serialize(this, options);

    }
    public static School FromJson(string data) {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Deserialize<School>(data, options);

    }

  }

  [GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
  public partial class Key_points : Collection<Anonymous10> {

    public string ToJson() {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Serialize(this, options);

    }
    public static Key_points FromJson(string data) {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Deserialize<Key_points>(data, options);

    }

  }

  [GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
  public partial class Tag_line {

    private IDictionary<string, object>? _additionalProperties;

    [JsonExtensionData]
    public IDictionary<string, object> AdditionalProperties {
      get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
      set { _additionalProperties = value; }
    }

    public string ToJson() {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Serialize(this, options);

    }
    public static Tag_line FromJson(string data) {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Deserialize<Tag_line>(data, options);

    }

  }

  [GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
  public partial class Customer {

    [JsonPropertyName("no")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? No { get; set; } = default!;

    [JsonPropertyName("int")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? Int { get; set; } = default!;

    private IDictionary<string, object>? _additionalProperties;

    [JsonExtensionData]
    public IDictionary<string, object> AdditionalProperties {
      get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
      set { _additionalProperties = value; }
    }

    public string ToJson() {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Serialize(this, options);

    }
    public static Customer FromJson(string data) {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Deserialize<Customer>(data, options);

    }

  }

  [GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
  public partial class Customer_anonymized {

    private IDictionary<string, object>? _additionalProperties;

    [JsonExtensionData]
    public IDictionary<string, object> AdditionalProperties {
      get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
      set { _additionalProperties = value; }
    }

    public string ToJson() {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Serialize(this, options);

    }
    public static Customer_anonymized FromJson(string data) {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Deserialize<Customer_anonymized>(data, options);

    }

  }

  [GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
  public partial class Customer_description {

    private IDictionary<string, object>? _additionalProperties;

    [JsonExtensionData]
    public IDictionary<string, object> AdditionalProperties {
      get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
      set { _additionalProperties = value; }
    }

    public string ToJson() {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Serialize(this, options);

    }
    public static Customer_description FromJson(string data) {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Deserialize<Customer_description>(data, options);

    }

  }

  [GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
  public partial class Customer_value_proposition {

    private IDictionary<string, object>? _additionalProperties;

    [JsonExtensionData]
    public IDictionary<string, object> AdditionalProperties {
      get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
      set { _additionalProperties = value; }
    }

    public string ToJson() {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Serialize(this, options);

    }
    public static Customer_value_proposition FromJson(string data) {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Deserialize<Customer_value_proposition>(data, options);

    }

  }

  [GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
  public partial class Industry {

    [JsonPropertyName("no")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? No { get; set; } = default!;

    [JsonPropertyName("int")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? Int { get; set; } = default!;

    private IDictionary<string, object>? _additionalProperties;

    [JsonExtensionData]
    public IDictionary<string, object> AdditionalProperties {
      get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
      set { _additionalProperties = value; }
    }

    public string ToJson() {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Serialize(this, options);

    }
    public static Industry FromJson(string data) {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Deserialize<Industry>(data, options);

    }

  }

  [GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
  public partial class Project_experience_skills : Collection<Anonymous11> {

    public string ToJson() {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Serialize(this, options);

    }
    public static Project_experience_skills FromJson(string data) {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Deserialize<Project_experience_skills>(data, options);

    }

  }

  [GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
  public partial class Project_type {

    private IDictionary<string, object>? _additionalProperties;

    [JsonExtensionData]
    public IDictionary<string, object> AdditionalProperties {
      get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
      set { _additionalProperties = value; }
    }

    public string ToJson() {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Serialize(this, options);

    }
    public static Project_type FromJson(string data) {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Deserialize<Project_type>(data, options);

    }

  }

  [GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
  public partial class Images : Collection<object> {

    public string ToJson() {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Serialize(this, options);

    }
    public static Images FromJson(string data) {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Deserialize<Images>(data, options);

    }

  }

  [GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
  public partial class Tags {

    [JsonPropertyName("no")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? No { get; set; } = default!;

    private IDictionary<string, object>? _additionalProperties;

    [JsonExtensionData]
    public IDictionary<string, object> AdditionalProperties {
      get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
      set { _additionalProperties = value; }
    }

    public string ToJson() {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Serialize(this, options);

    }
    public static Tags FromJson(string data) {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Deserialize<Tags>(data, options);

    }

  }

  [GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
  public partial class Summary {

    private IDictionary<string, object>? _additionalProperties;

    [JsonExtensionData]
    public IDictionary<string, object> AdditionalProperties {
      get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
      set { _additionalProperties = value; }
    }

    public string ToJson() {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Serialize(this, options);

    }
    public static Summary FromJson(string data) {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Deserialize<Summary>(data, options);

    }

  }

  [GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
  public partial class Recommender {

    [JsonPropertyName("no")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? No { get; set; } = default!;

    [JsonPropertyName("int")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? Int { get; set; } = default!;

    private IDictionary<string, object>? _additionalProperties;

    [JsonExtensionData]
    public IDictionary<string, object> AdditionalProperties {
      get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
      set { _additionalProperties = value; }
    }

    public string ToJson() {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Serialize(this, options);

    }
    public static Recommender FromJson(string data) {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Deserialize<Recommender>(data, options);

    }

  }

  [GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
  public partial class Technology_skills : Collection<Anonymous12> {

    public string ToJson() {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Serialize(this, options);

    }
    public static Technology_skills FromJson(string data) {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Deserialize<Technology_skills>(data, options);

    }

  }

  [GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
  public partial class Employer {

    [JsonPropertyName("no")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? No { get; set; } = default!;

    [JsonPropertyName("int")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? Int { get; set; } = default!;

    private IDictionary<string, object>? _additionalProperties;

    [JsonExtensionData]
    public IDictionary<string, object> AdditionalProperties {
      get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
      set { _additionalProperties = value; }
    }

    public string ToJson() {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Serialize(this, options);

    }
    public static Employer FromJson(string data) {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Deserialize<Employer>(data, options);

    }

  }

  [GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
  public partial class File {

    [JsonPropertyName("url")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? Url { get; set; } = default!;

    [JsonPropertyName("extension")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? Extension { get; set; } = default!;

    private IDictionary<string, object>? _additionalProperties;

    [JsonExtensionData]
    public IDictionary<string, object> AdditionalProperties {
      get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
      set { _additionalProperties = value; }
    }

    public string ToJson() {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Serialize(this, options);

    }
    public static File FromJson(string data) {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Deserialize<File>(data, options);

    }

  }

  [GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
  public partial class Honors_awards : Collection<Anonymous13> {

    public string ToJson() {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Serialize(this, options);

    }
    public static Honors_awards FromJson(string data) {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Deserialize<Honors_awards>(data, options);

    }

  }

  [GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
  public partial class Caption {

    private IDictionary<string, object>? _additionalProperties;

    [JsonExtensionData]
    public IDictionary<string, object> AdditionalProperties {
      get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
      set { _additionalProperties = value; }
    }

    public string ToJson() {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Serialize(this, options);

    }
    public static Caption FromJson(string data) {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Deserialize<Caption>(data, options);

    }

  }

  [GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
  public partial class Scaled {

    [JsonPropertyName("url")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? Url { get; set; } = default!;

    private IDictionary<string, object>? _additionalProperties;

    [JsonExtensionData]
    public IDictionary<string, object> AdditionalProperties {
      get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
      set { _additionalProperties = value; }
    }

    public string ToJson() {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Serialize(this, options);

    }
    public static Scaled FromJson(string data) {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Deserialize<Scaled>(data, options);

    }

  }

  [GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
  public partial class For_templates {

    [JsonPropertyName("url")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? Url { get; set; } = default!;

    private IDictionary<string, object>? _additionalProperties;

    [JsonExtensionData]
    public IDictionary<string, object> AdditionalProperties {
      get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
      set { _additionalProperties = value; }
    }

    public string ToJson() {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Serialize(this, options);

    }
    public static For_templates FromJson(string data) {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Deserialize<For_templates>(data, options);

    }

  }

  [GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
  public partial class For_projects {

    [JsonPropertyName("url")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? Url { get; set; } = default!;

    private IDictionary<string, object>? _additionalProperties;

    [JsonExtensionData]
    public IDictionary<string, object> AdditionalProperties {
      get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
      set { _additionalProperties = value; }
    }

    public string ToJson() {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Serialize(this, options);

    }
    public static For_projects FromJson(string data) {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Deserialize<For_projects>(data, options);

    }

  }

  [GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
  public partial class For_work {

    private IDictionary<string, object>? _additionalProperties;

    [JsonExtensionData]
    public IDictionary<string, object> AdditionalProperties {
      get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
      set { _additionalProperties = value; }
    }

    public string ToJson() {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Serialize(this, options);

    }
    public static For_work FromJson(string data) {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Deserialize<For_work>(data, options);

    }

  }

  [GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
  public partial class Issuer {

    private IDictionary<string, object>? _additionalProperties;

    [JsonExtensionData]
    public IDictionary<string, object> AdditionalProperties {
      get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
      set { _additionalProperties = value; }
    }

    public string ToJson() {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Serialize(this, options);

    }
    public static Issuer FromJson(string data) {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Deserialize<Issuer>(data, options);

    }

  }

  [GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
  public partial class Override_language_code {

    private IDictionary<string, object>? _additionalProperties;

    [JsonExtensionData]
    public IDictionary<string, object> AdditionalProperties {
      get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
      set { _additionalProperties = value; }
    }

    public string ToJson() {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Serialize(this, options);

    }
    public static Override_language_code FromJson(string data) {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Deserialize<Override_language_code>(data, options);

    }

  }

  [GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
  public partial class Imported_date {

    private IDictionary<string, object>? _additionalProperties;

    [JsonExtensionData]
    public IDictionary<string, object> AdditionalProperties {
      get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
      set { _additionalProperties = value; }
    }

    public string ToJson() {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Serialize(this, options);

    }
    public static Imported_date FromJson(string data) {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Deserialize<Imported_date>(data, options);

    }

  }

  [GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
  public partial class Landline {

    private IDictionary<string, object>? _additionalProperties;

    [JsonExtensionData]
    public IDictionary<string, object> AdditionalProperties {
      get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
      set { _additionalProperties = value; }
    }

    public string ToJson() {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Serialize(this, options);

    }
    public static Landline FromJson(string data) {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Deserialize<Landline>(data, options);

    }

  }

  [GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
  public partial class Level {

    private IDictionary<string, object>? _additionalProperties;

    [JsonExtensionData]
    public IDictionary<string, object> AdditionalProperties {
      get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
      set { _additionalProperties = value; }
    }

    public string ToJson() {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Serialize(this, options);

    }
    public static Level FromJson(string data) {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Deserialize<Level>(data, options);

    }

  }

  [GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
  public partial class Modifier_id {

    private IDictionary<string, object>? _additionalProperties;

    [JsonExtensionData]
    public IDictionary<string, object> AdditionalProperties {
      get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
      set { _additionalProperties = value; }
    }

    public string ToJson() {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Serialize(this, options);

    }
    public static Modifier_id FromJson(string data) {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Deserialize<Modifier_id>(data, options);

    }

  }

  [GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
  public partial class Tilbud_id {

    private IDictionary<string, object>? _additionalProperties;

    [JsonExtensionData]
    public IDictionary<string, object> AdditionalProperties {
      get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
      set { _additionalProperties = value; }
    }

    public string ToJson() {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Serialize(this, options);

    }
    public static Tilbud_id FromJson(string data) {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Deserialize<Tilbud_id>(data, options);

    }

  }

  [GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
  public partial class Proposal {

    private IDictionary<string, object>? _additionalProperties;

    [JsonExtensionData]
    public IDictionary<string, object> AdditionalProperties {
      get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
      set { _additionalProperties = value; }
    }

    public string ToJson() {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Serialize(this, options);

    }
    public static Proposal FromJson(string data) {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Deserialize<Proposal>(data, options);

    }

  }

  [GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
  public partial class Locked_at {

    private IDictionary<string, object>? _additionalProperties;

    [JsonExtensionData]
    public IDictionary<string, object> AdditionalProperties {
      get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
      set { _additionalProperties = value; }
    }

    public string ToJson() {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Serialize(this, options);

    }
    public static Locked_at FromJson(string data) {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Deserialize<Locked_at>(data, options);

    }

  }

  [GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
  public partial class Locked_until {

    private IDictionary<string, object>? _additionalProperties;

    [JsonExtensionData]
    public IDictionary<string, object> AdditionalProperties {
      get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
      set { _additionalProperties = value; }
    }

    public string ToJson() {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Serialize(this, options);

    }
    public static Locked_until FromJson(string data) {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Deserialize<Locked_until>(data, options);

    }

  }

  [GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
  public partial class Area_amt {

    private IDictionary<string, object>? _additionalProperties;

    [JsonExtensionData]
    public IDictionary<string, object> AdditionalProperties {
      get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
      set { _additionalProperties = value; }
    }

    public string ToJson() {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Serialize(this, options);

    }
    public static Area_amt FromJson(string data) {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Deserialize<Area_amt>(data, options);

    }

  }

  [GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
  public partial class Area_unit {

    private IDictionary<string, object>? _additionalProperties;

    [JsonExtensionData]
    public IDictionary<string, object> AdditionalProperties {
      get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
      set { _additionalProperties = value; }
    }

    public string ToJson() {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Serialize(this, options);

    }
    public static Area_unit FromJson(string data) {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Deserialize<Area_unit>(data, options);

    }

  }

  [GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
  public partial class Expected_roll_off_date {

    private IDictionary<string, object>? _additionalProperties;

    [JsonExtensionData]
    public IDictionary<string, object> AdditionalProperties {
      get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
      set { _additionalProperties = value; }
    }

    public string ToJson() {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Serialize(this, options);

    }
    public static Expected_roll_off_date FromJson(string data) {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Deserialize<Expected_roll_off_date>(data, options);

    }

  }

  [GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
  public partial class Location_country_code {

    private IDictionary<string, object>? _additionalProperties;

    [JsonExtensionData]
    public IDictionary<string, object> AdditionalProperties {
      get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
      set { _additionalProperties = value; }
    }

    public string ToJson() {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Serialize(this, options);

    }
    public static Location_country_code FromJson(string data) {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Deserialize<Location_country_code>(data, options);

    }

  }

  [GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
  public partial class Related_work_experience_id {

    private IDictionary<string, object>? _additionalProperties;

    [JsonExtensionData]
    public IDictionary<string, object> AdditionalProperties {
      get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
      set { _additionalProperties = value; }
    }

    public string ToJson() {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Serialize(this, options);

    }
    public static Related_work_experience_id FromJson(string data) {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Deserialize<Related_work_experience_id>(data, options);

    }

  }

  [GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
  public partial class Anonymous {

    [JsonPropertyName("user_id")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? User_id { get; set; } = default!;

    [JsonPropertyName("_id")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? _id { get; set; } = default!;

    [JsonPropertyName("id")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? Id { get; set; } = default!;

    [JsonPropertyName("company_id")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? Company_id { get; set; } = default!;

    [JsonPropertyName("company_name")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? Company_name { get; set; } = default!;

    [JsonPropertyName("company_subdomains")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public Company_subdomains? Company_subdomains { get; set; } = default!;

    [JsonPropertyName("company_group_ids")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public Company_group_ids? Company_group_ids { get; set; } = default!;

    [JsonPropertyName("email")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? Email { get; set; } = default!;

    [JsonPropertyName("external_unique_id")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? External_unique_id { get; set; } = default!;

    [JsonPropertyName("upn")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? Upn { get; set; } = default!;

    [JsonPropertyName("deactivated")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public bool? Deactivated { get; set; } = default!;

    [JsonPropertyName("deactivated_at")]

    [JsonIgnore]
    public bool? Deactivated_at { get; set; } = default!;

    [JsonPropertyName("created_at")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? Created_at { get; set; } = default!;

    [JsonPropertyName("updated_at")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? Updated_at { get; set; } = default!;

    [JsonPropertyName("role")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? Role { get; set; } = default!;

    [JsonPropertyName("roles")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public ICollection<string>? Roles { get; set; } = default!;

    [JsonPropertyName("role_allowed_office_ids")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public Role_allowed_office_ids? Role_allowed_office_ids { get; set; } = default!;

    [JsonPropertyName("role_allowed_tag_ids")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public Role_allowed_tag_ids? Role_allowed_tag_ids { get; set; } = default!;

    [JsonPropertyName("office_id")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? Office_id { get; set; } = default!;

    [JsonPropertyName("office_name")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? Office_name { get; set; } = default!;

    [JsonPropertyName("country_id")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? Country_id { get; set; } = default!;

    [JsonPropertyName("country_code")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? Country_code { get; set; } = default!;

    [JsonPropertyName("language_code")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? Language_code { get; set; } = default!;

    [JsonPropertyName("language_codes")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public Language_codes? Language_codes { get; set; } = default!;

    [JsonPropertyName("international_toggle")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? International_toggle { get; set; } = default!;

    [JsonPropertyName("preferred_download_format")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? Preferred_download_format { get; set; } = default!;

    [JsonPropertyName("masterdata_languages")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public Masterdata_languages? Masterdata_languages { get; set; } = default!;

    [JsonPropertyName("expand_proposals_toggle")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public bool? Expand_proposals_toggle { get; set; } = default!;

    [JsonPropertyName("selected_office_ids")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public Selected_office_ids? Selected_office_ids { get; set; } = default!;

    [JsonPropertyName("include_officeless_reference_projects")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public bool? Include_officeless_reference_projects { get; set; } = default!;

    [JsonPropertyName("selected_tag_ids")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public Selected_tag_ids? Selected_tag_ids { get; set; } = default!;

    [JsonPropertyName("override_language_code")]

    [JsonIgnore]
    public Override_language_code? Override_language_code { get; set; } = default!;

    [JsonPropertyName("default_cv_template_id")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? Default_cv_template_id { get; set; } = default!;

    [JsonPropertyName("image")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public Image? Image { get; set; } = default!;

    [JsonPropertyName("name")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? Name { get; set; } = default!;

    [JsonPropertyName("telephone")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? Telephone { get; set; } = default!;

    [JsonPropertyName("default_cv_id")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? Default_cv_id { get; set; } = default!;

    private IDictionary<string, object>? _additionalProperties;

    [JsonExtensionData]
    public IDictionary<string, object> AdditionalProperties {
      get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
      set { _additionalProperties = value; }
    }

    public string ToJson() {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Serialize(this, options);

    }
    public static Anonymous FromJson(string data) {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Deserialize<Anonymous>(data, options);

    }

  }

  [GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
  public partial class Response {

    [JsonPropertyName("_id")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? _id { get; set; } = default!;

    [JsonPropertyName("born_day")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public double? Born_day { get; set; } = default!;

    [JsonPropertyName("born_month")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public double? Born_month { get; set; } = default!;

    [JsonPropertyName("born_year")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public double? Born_year { get; set; } = default!;

    [JsonPropertyName("bruker_id")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? Bruker_id { get; set; } = default!;

    [JsonPropertyName("created_at")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? Created_at { get; set; } = default!;

    [JsonPropertyName("custom_tag_ids")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public Custom_tag_ids? Custom_tag_ids { get; set; } = default!;

    [JsonPropertyName("default")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public bool? Default { get; set; } = default!;

    [JsonPropertyName("imported_date")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public Imported_date? Imported_date { get; set; } = default!;

    [JsonPropertyName("landline")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public Landline? Landline { get; set; } = default!;

    [JsonPropertyName("level")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public Level? Level { get; set; } = default!;

    [JsonPropertyName("locked_at")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public Locked_at? Locked_at { get; set; } = default!;

    [JsonPropertyName("locked_until")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public Locked_until? Locked_until { get; set; } = default!;

    [JsonPropertyName("modifier_id")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public Modifier_id? Modifier_id { get; set; } = default!;

    [JsonPropertyName("name_multilang")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public Name_multilang? Name_multilang { get; set; } = default!;

    [JsonPropertyName("nationality")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public Nationality? Nationality { get; set; } = default!;

    [JsonPropertyName("navn")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? Navn { get; set; } = default!;

    [JsonPropertyName("order")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public double? Order { get; set; } = default!;

    [JsonPropertyName("owner_updated_at")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? Owner_updated_at { get; set; } = default!;

    [JsonPropertyName("owner_updated_at_significant")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? Owner_updated_at_significant { get; set; } = default!;

    [JsonPropertyName("place_of_residence")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public Place_of_residence? Place_of_residence { get; set; } = default!;

    [JsonPropertyName("technologies")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public Technologies? Technologies { get; set; } = default!;

    [JsonPropertyName("telefon")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? Telefon { get; set; } = default!;

    [JsonPropertyName("tilbud_id")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public Tilbud_id? Tilbud_id { get; set; } = default!;

    [JsonPropertyName("title")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public Title? Title { get; set; } = default!;

    [JsonPropertyName("twitter")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? Twitter { get; set; } = default!;

    [JsonPropertyName("updated_at")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? Updated_at { get; set; } = default!;

    [JsonPropertyName("version")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public double? Version { get; set; } = default!;

    [JsonPropertyName("name")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? Name { get; set; } = default!;

    [JsonPropertyName("user_id")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? User_id { get; set; } = default!;

    [JsonPropertyName("company_id")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? Company_id { get; set; } = default!;

    [JsonPropertyName("external_unique_id")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? External_unique_id { get; set; } = default!;

    [JsonPropertyName("email")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? Email { get; set; } = default!;

    [JsonPropertyName("country_code")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? Country_code { get; set; } = default!;

    [JsonPropertyName("language_code")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? Language_code { get; set; } = default!;

    [JsonPropertyName("language_codes")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public Language_codes? Language_codes { get; set; } = default!;

    [JsonPropertyName("proposal")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public Proposal? Proposal { get; set; } = default!;

    [JsonPropertyName("custom_tags")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public Custom_tags? Custom_tags { get; set; } = default!;

    [JsonPropertyName("updated_ago")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? Updated_ago { get; set; } = default!;

    [JsonPropertyName("template_document_type")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? Template_document_type { get; set; } = default!;

    [JsonPropertyName("default_word_template_id")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? Default_word_template_id { get; set; } = default!;

    [JsonPropertyName("default_ppt_template_id")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? Default_ppt_template_id { get; set; } = default!;

    [JsonPropertyName("project_experiences")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public Project_experiences? Project_experiences { get; set; } = default!;

    [JsonPropertyName("certifications")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public Certifications? Certifications { get; set; } = default!;

    [JsonPropertyName("courses")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public Courses? Courses { get; set; } = default!;

    [JsonPropertyName("educations")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public Educations? Educations { get; set; } = default!;

    [JsonPropertyName("cv_roles")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public Cv_roles? Cv_roles { get; set; } = default!;

    [JsonPropertyName("highlighted_roles")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public Highlighted_roles? Highlighted_roles { get; set; } = default!;

    [JsonPropertyName("image")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public Image? Image { get; set; } = default!;

    [JsonPropertyName("can_write")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public bool? Can_write { get; set; } = default!;

    private IDictionary<string, object>? _additionalProperties;

    [JsonExtensionData]
    public IDictionary<string, object> AdditionalProperties {
      get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
      set { _additionalProperties = value; }
    }

    public string ToJson() {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Serialize(this, options);

    }
    public static Response FromJson(string data) {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Deserialize<Response>(data, options);

    }

  }

  [GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
  public partial class Anonymous2 {

    [JsonPropertyName("_id")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? _id { get; set; } = default!;

    [JsonPropertyName("category")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public Category? Category { get; set; } = default!;

    [JsonPropertyName("created_at")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? Created_at { get; set; } = default!;

    [JsonPropertyName("disabled")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public bool? Disabled { get; set; } = default!;

    [JsonPropertyName("diverged_from_master")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public bool? Diverged_from_master { get; set; } = default!;

    [JsonPropertyName("exclude_tags")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public Exclude_tags? Exclude_tags { get; set; } = default!;

    [JsonPropertyName("external_unique_id")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? External_unique_id { get; set; } = default!;

    [JsonPropertyName("modifier_id")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public Modifier_id? Modifier_id { get; set; } = default!;

    [JsonPropertyName("order")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public double? Order { get; set; } = default!;

    [JsonPropertyName("origin_id")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? Origin_id { get; set; } = default!;

    [JsonPropertyName("owner_updated_at")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? Owner_updated_at { get; set; } = default!;

    [JsonPropertyName("recently_added")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public bool? Recently_added { get; set; } = default!;

    [JsonPropertyName("starred")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public bool? Starred { get; set; } = default!;

    [JsonPropertyName("uncategorized")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public bool? Uncategorized { get; set; } = default!;

    [JsonPropertyName("updated_at")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? Updated_at { get; set; } = default!;

    [JsonPropertyName("version")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public double? Version { get; set; } = default!;

    private IDictionary<string, object>? _additionalProperties;

    [JsonExtensionData]
    public IDictionary<string, object> AdditionalProperties {
      get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
      set { _additionalProperties = value; }
    }

    public string ToJson() {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Serialize(this, options);

    }
    public static Anonymous2 FromJson(string data) {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Deserialize<Anonymous2>(data, options);

    }

  }

  [GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
  public partial class Anonymous3 {

    [JsonPropertyName("_id")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? _id { get; set; } = default!;

    [JsonPropertyName("id")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? Id { get; set; } = default!;

    [JsonPropertyName("values")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public Values3? Values { get; set; } = default!;

    [JsonPropertyName("external_unique_id")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? External_unique_id { get; set; } = default!;

    [JsonPropertyName("custom_tag_category_id")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? Custom_tag_category_id { get; set; } = default!;

    [JsonPropertyName("category_ids")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public Category_ids? Category_ids { get; set; } = default!;

    [JsonPropertyName("custom_tag_category")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public Custom_tag_category2? Custom_tag_category { get; set; } = default!;

    private IDictionary<string, object>? _additionalProperties;

    [JsonExtensionData]
    public IDictionary<string, object> AdditionalProperties {
      get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
      set { _additionalProperties = value; }
    }

    public string ToJson() {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Serialize(this, options);

    }
    public static Anonymous3 FromJson(string data) {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Deserialize<Anonymous3>(data, options);

    }

  }

  [GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
  public partial class Values2 {

    [JsonPropertyName("no")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? No { get; set; } = default!;

    [JsonPropertyName("int")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? Int { get; set; } = default!;

    [JsonPropertyName("se")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? Se { get; set; } = default!;

    private IDictionary<string, object>? _additionalProperties;

    [JsonExtensionData]
    public IDictionary<string, object> AdditionalProperties {
      get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
      set { _additionalProperties = value; }
    }

    public string ToJson() {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Serialize(this, options);

    }
    public static Values2 FromJson(string data) {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Deserialize<Values2>(data, options);

    }

  }

  [GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
  public partial class Anonymous4 {

    [JsonPropertyName("_id")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? _id { get; set; } = default!;

    [JsonPropertyName("created_at")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? Created_at { get; set; } = default!;

    [JsonPropertyName("disabled")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public bool? Disabled { get; set; } = default!;

    [JsonPropertyName("diverged_from_master")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public bool? Diverged_from_master { get; set; } = default!;

    [JsonPropertyName("external_unique_id")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? External_unique_id { get; set; } = default!;

    [JsonPropertyName("key_points")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public Key_points? Key_points { get; set; } = default!;

    [JsonPropertyName("label")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? Label { get; set; } = default!;

    [JsonPropertyName("long_description")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public Long_description? Long_description { get; set; } = default!;

    [JsonPropertyName("modifier_id")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public Modifier_id? Modifier_id { get; set; } = default!;

    [JsonPropertyName("order")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public double? Order { get; set; } = default!;

    [JsonPropertyName("origin_id")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? Origin_id { get; set; } = default!;

    [JsonPropertyName("owner_updated_at")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? Owner_updated_at { get; set; } = default!;

    [JsonPropertyName("recently_added")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public bool? Recently_added { get; set; } = default!;

    [JsonPropertyName("starred")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public bool? Starred { get; set; } = default!;

    [JsonPropertyName("tag_line")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public Tag_line? Tag_line { get; set; } = default!;

    [JsonPropertyName("updated_at")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? Updated_at { get; set; } = default!;

    [JsonPropertyName("version")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public double? Version { get; set; } = default!;

    private IDictionary<string, object>? _additionalProperties;

    [JsonExtensionData]
    public IDictionary<string, object> AdditionalProperties {
      get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
      set { _additionalProperties = value; }
    }

    public string ToJson() {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Serialize(this, options);

    }
    public static Anonymous4 FromJson(string data) {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Deserialize<Anonymous4>(data, options);

    }

  }

  [GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
  public partial class Anonymous5 {

    [JsonPropertyName("_id")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? _id { get; set; } = default!;

    [JsonPropertyName("created_at")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? Created_at { get; set; } = default!;

    [JsonPropertyName("disabled")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public bool? Disabled { get; set; } = default!;

    [JsonPropertyName("diverged_from_master")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public bool? Diverged_from_master { get; set; } = default!;

    [JsonPropertyName("external_unique_id")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? External_unique_id { get; set; } = default!;

    [JsonPropertyName("level")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public Level2? Level { get; set; } = default!;

    [JsonPropertyName("modifier_id")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public Modifier_id? Modifier_id { get; set; } = default!;

    [JsonPropertyName("name")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public Name? Name { get; set; } = default!;

    [JsonPropertyName("order")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public double? Order { get; set; } = default!;

    [JsonPropertyName("origin_id")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? Origin_id { get; set; } = default!;

    [JsonPropertyName("owner_updated_at")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? Owner_updated_at { get; set; } = default!;

    [JsonPropertyName("recently_added")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public bool? Recently_added { get; set; } = default!;

    [JsonPropertyName("starred")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public bool? Starred { get; set; } = default!;

    [JsonPropertyName("updated_at")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? Updated_at { get; set; } = default!;

    [JsonPropertyName("version")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public double? Version { get; set; } = default!;

    private IDictionary<string, object>? _additionalProperties;

    [JsonExtensionData]
    public IDictionary<string, object> AdditionalProperties {
      get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
      set { _additionalProperties = value; }
    }

    public string ToJson() {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Serialize(this, options);

    }
    public static Anonymous5 FromJson(string data) {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Deserialize<Anonymous5>(data, options);

    }

  }

  [GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
  public partial class Anonymous6 {

    [JsonPropertyName("_id")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? _id { get; set; } = default!;

    [JsonPropertyName("created_at")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? Created_at { get; set; } = default!;

    [JsonPropertyName("description")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public Description? Description { get; set; } = default!;

    [JsonPropertyName("disabled")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public bool? Disabled { get; set; } = default!;

    [JsonPropertyName("diverged_from_master")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public bool? Diverged_from_master { get; set; } = default!;

    [JsonPropertyName("external_unique_id")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? External_unique_id { get; set; } = default!;

    [JsonPropertyName("modifier_id")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public Modifier_id? Modifier_id { get; set; } = default!;

    [JsonPropertyName("name")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public Name2? Name { get; set; } = default!;

    [JsonPropertyName("order")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public double? Order { get; set; } = default!;

    [JsonPropertyName("origin_id")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? Origin_id { get; set; } = default!;

    [JsonPropertyName("owner_updated_at")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? Owner_updated_at { get; set; } = default!;

    [JsonPropertyName("recently_added")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public bool? Recently_added { get; set; } = default!;

    [JsonPropertyName("starred")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public bool? Starred { get; set; } = default!;

    [JsonPropertyName("updated_at")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? Updated_at { get; set; } = default!;

    [JsonPropertyName("version")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public double? Version { get; set; } = default!;

    [JsonPropertyName("year_from")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? Year_from { get; set; } = default!;

    [JsonPropertyName("year_to")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? Year_to { get; set; } = default!;

    private IDictionary<string, object>? _additionalProperties;

    [JsonExtensionData]
    public IDictionary<string, object> AdditionalProperties {
      get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
      set { _additionalProperties = value; }
    }

    public string ToJson() {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Serialize(this, options);

    }
    public static Anonymous6 FromJson(string data) {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Deserialize<Anonymous6>(data, options);

    }

  }

  [GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
  public partial class Anonymous7 {

    [JsonPropertyName("_id")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? _id { get; set; } = default!;

    [JsonPropertyName("created_at")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? Created_at { get; set; } = default!;

    [JsonPropertyName("description")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public Description? Description { get; set; } = default!;

    [JsonPropertyName("disabled")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public bool? Disabled { get; set; } = default!;

    [JsonPropertyName("diverged_from_master")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public bool? Diverged_from_master { get; set; } = default!;

    [JsonPropertyName("external_unique_id")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? External_unique_id { get; set; } = default!;

    [JsonPropertyName("long_description")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public Long_description? Long_description { get; set; } = default!;

    [JsonPropertyName("modifier_id")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public Modifier_id? Modifier_id { get; set; } = default!;

    [JsonPropertyName("month")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? Month { get; set; } = default!;

    [JsonPropertyName("order")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public double? Order { get; set; } = default!;

    [JsonPropertyName("origin_id")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? Origin_id { get; set; } = default!;

    [JsonPropertyName("owner_updated_at")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? Owner_updated_at { get; set; } = default!;

    [JsonPropertyName("recently_added")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public bool? Recently_added { get; set; } = default!;

    [JsonPropertyName("starred")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public bool? Starred { get; set; } = default!;

    [JsonPropertyName("updated_at")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? Updated_at { get; set; } = default!;

    [JsonPropertyName("version")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public double? Version { get; set; } = default!;

    [JsonPropertyName("year")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? Year { get; set; } = default!;

    private IDictionary<string, object>? _additionalProperties;

    [JsonExtensionData]
    public IDictionary<string, object> AdditionalProperties {
      get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
      set { _additionalProperties = value; }
    }

    public string ToJson() {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Serialize(this, options);

    }
    public static Anonymous7 FromJson(string data) {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Deserialize<Anonymous7>(data, options);

    }

  }

  [GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
  public partial class Anonymous8 {

    [JsonPropertyName("_id")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? _id { get; set; } = default!;

    [JsonPropertyName("created_at")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? Created_at { get; set; } = default!;

    [JsonPropertyName("disabled")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public bool? Disabled { get; set; } = default!;

    [JsonPropertyName("diverged_from_master")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public bool? Diverged_from_master { get; set; } = default!;

    [JsonPropertyName("external_unique_id")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? External_unique_id { get; set; } = default!;

    [JsonPropertyName("long_description")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public Long_description? Long_description { get; set; } = default!;

    [JsonPropertyName("modifier_id")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public Modifier_id? Modifier_id { get; set; } = default!;

    [JsonPropertyName("order")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public double? Order { get; set; } = default!;

    [JsonPropertyName("origin_id")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? Origin_id { get; set; } = default!;

    [JsonPropertyName("owner_updated_at")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? Owner_updated_at { get; set; } = default!;

    [JsonPropertyName("recently_added")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public bool? Recently_added { get; set; } = default!;

    [JsonPropertyName("recommender")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public Recommender? Recommender { get; set; } = default!;

    [JsonPropertyName("starred")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public bool? Starred { get; set; } = default!;

    [JsonPropertyName("updated_at")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? Updated_at { get; set; } = default!;

    [JsonPropertyName("version")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public double? Version { get; set; } = default!;

    private IDictionary<string, object>? _additionalProperties;

    [JsonExtensionData]
    public IDictionary<string, object> AdditionalProperties {
      get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
      set { _additionalProperties = value; }
    }

    public string ToJson() {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Serialize(this, options);

    }
    public static Anonymous8 FromJson(string data) {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Deserialize<Anonymous8>(data, options);

    }

  }

  [GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
  public partial class Anonymous9 {

    [JsonPropertyName("_id")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? _id { get; set; } = default!;

    [JsonPropertyName("created_at")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? Created_at { get; set; } = default!;

    [JsonPropertyName("description")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public Description? Description { get; set; } = default!;

    [JsonPropertyName("disabled")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public bool? Disabled { get; set; } = default!;

    [JsonPropertyName("diverged_from_master")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public bool? Diverged_from_master { get; set; } = default!;

    [JsonPropertyName("employer")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public Employer? Employer { get; set; } = default!;

    [JsonPropertyName("external_unique_id")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? External_unique_id { get; set; } = default!;

    [JsonPropertyName("long_description")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public Long_description? Long_description { get; set; } = default!;

    [JsonPropertyName("modifier_id")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public Modifier_id? Modifier_id { get; set; } = default!;

    [JsonPropertyName("month_from")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? Month_from { get; set; } = default!;

    [JsonPropertyName("month_to")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? Month_to { get; set; } = default!;

    [JsonPropertyName("order")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public double? Order { get; set; } = default!;

    [JsonPropertyName("origin_id")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? Origin_id { get; set; } = default!;

    [JsonPropertyName("owner_updated_at")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? Owner_updated_at { get; set; } = default!;

    [JsonPropertyName("recently_added")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public bool? Recently_added { get; set; } = default!;

    [JsonPropertyName("starred")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public bool? Starred { get; set; } = default!;

    [JsonPropertyName("updated_at")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? Updated_at { get; set; } = default!;

    [JsonPropertyName("version")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public double? Version { get; set; } = default!;

    [JsonPropertyName("year_from")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? Year_from { get; set; } = default!;

    [JsonPropertyName("year_to")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? Year_to { get; set; } = default!;

    private IDictionary<string, object>? _additionalProperties;

    [JsonExtensionData]
    public IDictionary<string, object> AdditionalProperties {
      get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
      set { _additionalProperties = value; }
    }

    public string ToJson() {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Serialize(this, options);

    }
    public static Anonymous9 FromJson(string data) {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Deserialize<Anonymous9>(data, options);

    }

  }

  [GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
  public partial class Anonymous10 {

    [JsonPropertyName("_id")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? _id { get; set; } = default!;

    [JsonPropertyName("created_at")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? Created_at { get; set; } = default!;

    [JsonPropertyName("disabled")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public bool? Disabled { get; set; } = default!;

    [JsonPropertyName("diverged_from_master")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public bool? Diverged_from_master { get; set; } = default!;

    [JsonPropertyName("long_description")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public object? Long_description { get; set; } = default!;

    [JsonPropertyName("modifier_id")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public Modifier_id? Modifier_id { get; set; } = default!;

    [JsonPropertyName("name")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public Name3? Name { get; set; } = default!;

    [JsonPropertyName("order")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public double? Order { get; set; } = default!;

    [JsonPropertyName("origin_id")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? Origin_id { get; set; } = default!;

    [JsonPropertyName("recently_added")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public bool? Recently_added { get; set; } = default!;

    [JsonPropertyName("starred")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public bool? Starred { get; set; } = default!;

    [JsonPropertyName("updated_at")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? Updated_at { get; set; } = default!;

    [JsonPropertyName("version")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public double? Version { get; set; } = default!;

    private IDictionary<string, object>? _additionalProperties;

    [JsonExtensionData]
    public IDictionary<string, object> AdditionalProperties {
      get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
      set { _additionalProperties = value; }
    }

    public string ToJson() {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Serialize(this, options);

    }
    public static Anonymous10 FromJson(string data) {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Deserialize<Anonymous10>(data, options);

    }

  }

  [GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
  public partial class Anonymous11 {

    [JsonPropertyName("_id")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? _id { get; set; } = default!;

    [JsonPropertyName("base_duration_in_years")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public double? Base_duration_in_years { get; set; } = default!;

    [JsonPropertyName("modifier_id")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public Modifier_id? Modifier_id { get; set; } = default!;

    [JsonPropertyName("offset_duration_in_years")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public double? Offset_duration_in_years { get; set; } = default!;

    [JsonPropertyName("order")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public double? Order { get; set; } = default!;

    [JsonPropertyName("proficiency")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public double? Proficiency { get; set; } = default!;

    [JsonPropertyName("tags")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public Tags? Tags { get; set; } = default!;

    [JsonPropertyName("total_duration_in_years")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public double? Total_duration_in_years { get; set; } = default!;

    [JsonPropertyName("version")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public double? Version { get; set; } = default!;

    private IDictionary<string, object>? _additionalProperties;

    [JsonExtensionData]
    public IDictionary<string, object> AdditionalProperties {
      get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
      set { _additionalProperties = value; }
    }

    public string ToJson() {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Serialize(this, options);

    }
    public static Anonymous11 FromJson(string data) {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Deserialize<Anonymous11>(data, options);

    }

  }

  [GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
  public partial class Anonymous12 {

    [JsonPropertyName("_id")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? _id { get; set; } = default!;

    [JsonPropertyName("base_duration_in_years")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public double? Base_duration_in_years { get; set; } = default!;

    [JsonPropertyName("modifier_id")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public Modifier_id? Modifier_id { get; set; } = default!;

    [JsonPropertyName("offset_duration_in_years")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public double? Offset_duration_in_years { get; set; } = default!;

    [JsonPropertyName("order")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public double? Order { get; set; } = default!;

    [JsonPropertyName("proficiency")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public double? Proficiency { get; set; } = default!;

    [JsonPropertyName("tags")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public Tags2? Tags { get; set; } = default!;

    [JsonPropertyName("total_duration_in_years")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public double? Total_duration_in_years { get; set; } = default!;

    [JsonPropertyName("version")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public double? Version { get; set; } = default!;

    private IDictionary<string, object>? _additionalProperties;

    [JsonExtensionData]
    public IDictionary<string, object> AdditionalProperties {
      get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
      set { _additionalProperties = value; }
    }

    public string ToJson() {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Serialize(this, options);

    }
    public static Anonymous12 FromJson(string data) {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Deserialize<Anonymous12>(data, options);

    }

  }

  [GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
  public partial class Anonymous13 {

    [JsonPropertyName("_id")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? _id { get; set; } = default!;

    [JsonPropertyName("created_at")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? Created_at { get; set; } = default!;

    [JsonPropertyName("disabled")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public bool? Disabled { get; set; } = default!;

    [JsonPropertyName("diverged_from_master")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public bool? Diverged_from_master { get; set; } = default!;

    [JsonPropertyName("external_unique_id")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? External_unique_id { get; set; } = default!;

    [JsonPropertyName("for_work")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public For_work? For_work { get; set; } = default!;

    [JsonPropertyName("issuer")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public Issuer? Issuer { get; set; } = default!;

    [JsonPropertyName("long_description")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public object? Long_description { get; set; } = default!;

    [JsonPropertyName("modifier_id")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public Modifier_id? Modifier_id { get; set; } = default!;

    [JsonPropertyName("month")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? Month { get; set; } = default!;

    [JsonPropertyName("name")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public object? Name { get; set; } = default!;

    [JsonPropertyName("order")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public double? Order { get; set; } = default!;

    [JsonPropertyName("origin_id")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? Origin_id { get; set; } = default!;

    [JsonPropertyName("owner_updated_at")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? Owner_updated_at { get; set; } = default!;

    [JsonPropertyName("recently_added")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public bool? Recently_added { get; set; } = default!;

    [JsonPropertyName("starred")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public bool? Starred { get; set; } = default!;

    [JsonPropertyName("updated_at")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? Updated_at { get; set; } = default!;

    [JsonPropertyName("version")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public double? Version { get; set; } = default!;

    [JsonPropertyName("year")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? Year { get; set; } = default!;

    private IDictionary<string, object>? _additionalProperties;

    [JsonExtensionData]
    public IDictionary<string, object> AdditionalProperties {
      get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
      set { _additionalProperties = value; }
    }

    public string ToJson() {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Serialize(this, options);

    }
    public static Anonymous13 FromJson(string data) {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Deserialize<Anonymous13>(data, options);

    }

  }

  [GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
  public partial class Values3 {

    [JsonPropertyName("no")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? No { get; set; } = default!;

    private IDictionary<string, object>? _additionalProperties;

    [JsonExtensionData]
    public IDictionary<string, object> AdditionalProperties {
      get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
      set { _additionalProperties = value; }
    }

    public string ToJson() {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Serialize(this, options);

    }
    public static Values3 FromJson(string data) {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Deserialize<Values3>(data, options);

    }

  }

  [GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
  public partial class Custom_tag_category2 {

    [JsonPropertyName("_id")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? _id { get; set; } = default!;

    [JsonPropertyName("id")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? Id { get; set; } = default!;

    [JsonPropertyName("values")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public Values? Values { get; set; } = default!;

    [JsonPropertyName("external_unique_id")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? External_unique_id { get; set; } = default!;

    [JsonPropertyName("can_be_used_for_cvs")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public bool? Can_be_used_for_cvs { get; set; } = default!;

    [JsonPropertyName("can_be_used_for_references")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public bool? Can_be_used_for_references { get; set; } = default!;

    [JsonPropertyName("can_be_used_for_customers")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public bool? Can_be_used_for_customers { get; set; } = default!;

    [JsonPropertyName("allow_filtering")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public bool? Allow_filtering { get; set; } = default!;

    private IDictionary<string, object>? _additionalProperties;

    [JsonExtensionData]
    public IDictionary<string, object> AdditionalProperties {
      get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
      set { _additionalProperties = value; }
    }

    public string ToJson() {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Serialize(this, options);

    }
    public static Custom_tag_category2 FromJson(string data) {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Deserialize<Custom_tag_category2>(data, options);

    }

  }

  [GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
  public partial class Level2 {

    [JsonPropertyName("no")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? No { get; set; } = default!;

    [JsonPropertyName("int")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? Int { get; set; } = default!;

    private IDictionary<string, object>? _additionalProperties;

    [JsonExtensionData]
    public IDictionary<string, object> AdditionalProperties {
      get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
      set { _additionalProperties = value; }
    }

    public string ToJson() {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Serialize(this, options);

    }
    public static Level2 FromJson(string data) {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Deserialize<Level2>(data, options);

    }

  }

  [GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
  public partial class Name {

    [JsonPropertyName("no")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? No { get; set; } = default!;

    [JsonPropertyName("int")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? Int { get; set; } = default!;

    [JsonPropertyName("se")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? Se { get; set; } = default!;

    private IDictionary<string, object>? _additionalProperties;

    [JsonExtensionData]
    public IDictionary<string, object> AdditionalProperties {
      get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
      set { _additionalProperties = value; }
    }

    public string ToJson() {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Serialize(this, options);

    }
    public static Name FromJson(string data) {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Deserialize<Name>(data, options);

    }

  }

  [GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
  public partial class Name2 {

    [JsonPropertyName("no")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? No { get; set; } = default!;

    [JsonPropertyName("int")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? Int { get; set; } = default!;

    private IDictionary<string, object>? _additionalProperties;

    [JsonExtensionData]
    public IDictionary<string, object> AdditionalProperties {
      get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
      set { _additionalProperties = value; }
    }

    public string ToJson() {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Serialize(this, options);

    }
    public static Name2 FromJson(string data) {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Deserialize<Name2>(data, options);

    }

  }

  [GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
  public partial class Name3 {

    [JsonPropertyName("no")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? No { get; set; } = default!;

    [JsonPropertyName("int")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? Int { get; set; } = default!;

    private IDictionary<string, object>? _additionalProperties;

    [JsonExtensionData]
    public IDictionary<string, object> AdditionalProperties {
      get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
      set { _additionalProperties = value; }
    }

    public string ToJson() {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Serialize(this, options);

    }
    public static Name3 FromJson(string data) {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Deserialize<Name3>(data, options);

    }

  }

  [GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
  public partial class Tags2 {

    [JsonPropertyName("no")]

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
    public string? No { get; set; } = default!;

    private IDictionary<string, object>? _additionalProperties;

    [JsonExtensionData]
    public IDictionary<string, object> AdditionalProperties {
      get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
      set { _additionalProperties = value; }
    }

    public string ToJson() {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Serialize(this, options);

    }
    public static Tags2 FromJson(string data) {

      var options = new JsonSerializerOptions();

      return JsonSerializer.Deserialize<Tags2>(data, options);

    }

  }


  [GeneratedCode("NSwag", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
  public partial class SwaggerResponse {
    public int StatusCode { get; private set; }

    public IReadOnlyDictionary<string, IEnumerable<string>> Headers { get; private set; }

    public SwaggerResponse(int statusCode, IReadOnlyDictionary<string, IEnumerable<string>> headers) {
      StatusCode = statusCode;
      Headers = headers;
    }
  }

  [GeneratedCode("NSwag", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
  public partial class SwaggerResponse<TResult> : SwaggerResponse {
    public TResult Result { get; private set; }

    public SwaggerResponse(int statusCode, IReadOnlyDictionary<string, IEnumerable<string>> headers, TResult result)
        : base(statusCode, headers) {
      Result = result;
    }
  }


  [GeneratedCode("NSwag", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
  public partial class ApiException : System.Exception {
    public int StatusCode { get; private set; }

    public string? Response { get; private set; }

    public IReadOnlyDictionary<string, IEnumerable<string>> Headers { get; private set; }

    public ApiException(string message, int statusCode, string? response, IReadOnlyDictionary<string, IEnumerable<string>> headers, System.Exception? innerException)
        : base(message + "\n\nStatus: " + statusCode + "\nResponse: \n" + ((response == null) ? "(null)" : response.Substring(0, response.Length >= 512 ? 512 : response.Length)), innerException) {
      StatusCode = statusCode;
      Response = response;
      Headers = headers;
    }

    public override string ToString() {
      return string.Format("HTTP Response: \n\n{0}\n\n{1}", Response, base.ToString());
    }
  }

  [GeneratedCode("NSwag", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
  public partial class ApiException<TResult> : ApiException {
    public TResult Result { get; private set; }

    public ApiException(string message, int statusCode, string? response, IReadOnlyDictionary<string, IEnumerable<string>> headers, TResult result, System.Exception? innerException)
        : base(message, statusCode, response, headers, innerException) {
      Result = result;
    }
  }

}

#pragma warning restore 1591
#pragma warning restore 1573
#pragma warning restore 472
#pragma warning restore 114
#pragma warning restore 108
#pragma warning restore 3016
#pragma warning restore 8603
